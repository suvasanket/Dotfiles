return {
	{
		"folke/which-key.nvim",
		event = "VeryLazy",
		config = function()
			vim.o.timeout = true
			vim.o.timeoutlen = 300
			require("which-key").setup({
				preset = "helix",
				show_help = false,
				win = {
					border = "none",
					wo = {
						winblend = 15,
					},
				},
				icons = {
					mappings = false,
				},
				spec = {
					{ "<leader><leader>", group = "swap" },
					{ "<leader>c", group = "code" },
					{ "<leader>d", group = "debug" },
					{ "<leader>f", group = "find" },
					{ "<leader>g", group = "git" },
					{ "<leader>k", desc = "signature_help" },
					{ "<leader>m", group = "refactor" },
					{ "<leader>n", group = "notes" },
					{ "<leader>q", group = "macro/session" },
					{ "<leader>s", group = "search" },
					{ "<leader>r", group = "refactor" },
					{ "<leader>w", group = "workspace" },
					{ "<leader>wa", desc = "add_workspace_folder" },
					{ "<leader>wl", desc = "list_workspace_folders" },
					{ "<leader>wr", desc = "remove_workspace_folder" },
					{ "\\c", desc = "+cmp" },
					{ "\\l", desc = "+lsp" },
					{ "daa", desc = "AroundArgument" },
					{ "dac", desc = "AroundClass " },
					{ "daf", desc = "AroundFunction" },
					{ "dan", group = "next" },
					{ "dana", desc = "nextAroundArgument" },
					{ "danc", desc = "nextAroundClass " },
					{ "danf", desc = "nextAroundFunction" },
					{ "dano", desc = "nextAroundBlocks" },
					{ "dao", desc = "AroundBlocks" },
					{ "dia", desc = "AroundArgument" },
					{ "dic", desc = "AroundClass " },
					{ "dif", desc = "AroundFunction" },
					{ "dina", desc = "nextAroundArgument" },
					{ "dinc", desc = "nextAroundClass " },
					{ "dinf", desc = "nextAroundFunction" },
					{ "dino", desc = "nextAroundBlocks" },
					{ "dio", desc = "AroundBlocks" },
					{ "gD", desc = "Declaration" },
					{ "gb", desc = "Block-comment" },
					{ "gc", desc = "Line-comment" },
					{ "gd", desc = "Definition" },
					{ "gi", desc = "Implementation" },
					{ "gr", desc = "Reference" },
					{ "gt", group = "type" },
					{ "gtd", desc = "Definition" },
					{ "vaa", desc = "AroundArgument" },
					{ "vac", desc = "AroundClass " },
					{ "vaf", desc = "AroundFunction" },
					{ "van", group = "next" },
					{ "vana", desc = "nextAroundArgument" },
					{ "vanc", desc = "nextAroundClass " },
					{ "vanf", desc = "nextAroundFunction" },
					{ "vano", desc = "nextAroundBlocks" },
					{ "vao", desc = "AroundBlocks" },
					{ "via", desc = "InsideArgument" },
					{ "vic", desc = "InsideClass " },
					{ "vif", desc = "InsideFunction" },
					{ "vin", group = "next" },
					{ "vina", desc = "nextInsideArgument" },
					{ "vinc", desc = "nextInsideClass " },
					{ "vinf", desc = "nextInsideFunction" },
					{ "vino", desc = "nextInsideBlocks" },
					{ "vio", desc = "InsideBlocks" },
					{ "yaa", desc = "AroundArgument" },
					{ "yac", desc = "AroundClass " },
					{ "yaf", desc = "AroundFunction" },
					{ "yan", group = "next" },
					{ "yana", desc = "nextAroundArgument" },
					{ "yanc", desc = "nextAroundClass " },
					{ "yanf", desc = "nextAroundFunction" },
					{ "yano", desc = "nextAroundBlocks" },
					{ "yao", desc = "AroundBlocks" },
					{ "yia", desc = "AroundArgument" },
					{ "yic", desc = "AroundClass " },
					{ "yif", desc = "AroundFunction" },
					{ "yina", desc = "nextAroundArgument" },
					{ "yinc", desc = "nextAroundClass " },
					{ "yinf", desc = "nextAroundFunction" },
					{ "yino", desc = "nextAroundBlocks" },
					{ "yio", desc = "AroundBlocks" },
					{ "zx", group = "kill-buffer" },
				},
			})
		end,
	},
}
