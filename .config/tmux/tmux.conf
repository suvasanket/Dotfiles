set-option -ga terminal-overrides ",xterm-256color:Tc"
set -s escape-time 0
set -g default-terminal "tmux-256color"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'

#prefix
unbind C-b
set -g prefix C-a

set-option -g detach-on-destroy off

bind S setw synchronize-panes
bind u setw synchronize-panes off

unbind %
bind % split-window -h -c "#{pane_current_path}"

unbind '"'
bind '"' split-window -l 30% -v -c "#{pane_current_path}"

bind-key ] select-window -t +1
bind-key [ select-window -t -1
#
# bind ] switch-client -n
# bind [ switch-client -p

unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

unbind c
bind t new-window -c "#{pane_current_path}"
bind m resize-pane -Z

bind f11 kill-window -a

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-f if-shell "$is_vim" 'send-keys C-f' 'send-keys "f\n"'
bind-key q if-shell "$is_vim" 'send-keys C-\\' 'kill-pane'
bind-key K if-shell "$is_vim" 'send-keys C-S-\\' 'send-keys "clear\n"'

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# copy mode
bind c copy-mode
setw -g mode-keys vi
set -g set-clipboard on
bind v paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe "xclip -i -selection clipboard"
bind-key -T copy-mode-vi i send -X cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"

##sesh
bind-key g run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 50%,50% -x 1 -y 32\
		--layout=reverse \
		--no-sort \
		--prompt='› ' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(› )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ses:)+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(conf:)+reload(sesh list -c)' \
		--bind 'ctrl-d:change-prompt(dir:)+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(fd:)+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-q:execute(tmux kill-session -t {})+change-prompt(› )+reload(sesh list)'
)\""

# myoption
setw -g mouse on
set-option -g automatic-rename on
bind-key W if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                    "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                    "run-shell 'tmux kill-session -t \"#S\"'"
bind N command-prompt -p "New Session:" "new-session -A -s '%%'"

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'
############################################## Plugins #################################################################
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key Enter
set -g @fingers-backdrop-style 'fg=green'
########################################################################################################################

#status-bar
# bind-key b set-option -g status #Ctrl+F3 Combo
set-option -g status-justify left
set-option -g status-position bottom
set -g status-style fg=#898989,bg=default

set-option -g status-left '[#S] '
set -g window-status-current-format "#[fg=#b4b4b3,bg=#292929] #I:#W#(printf '%%s\n' '#F' | tr 'Z' '+' ) "
set -g window-status-format "#[fg=#a3a3a3] #I:#W#(printf '%%s\n' '#F' | tr '-' '.' | tr 'Z' '+') "
# set -g window-status-current-format "#[fg=#b4b4b3,bg=#181818] #I.#W "
# set -g window-status-format "#[fg=#a3a3a3,bg=#292929] #I.#W "
# set-option -g status-right '#[fg=#434242,bg=default]#[fg=white,bg=#434242] #S #[fg=#434242,bg=default]   '
# set-option -g status-right '#[fg=#F4EEE0,bg=#292929][#S]'
set-option -g status-right ''
set-option -g status-interval 5

#Auto hide
# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

run '~/.tmux/plugins/tpm/tpm'
