set-option -ga terminal-overrides ",xterm-256color:Tc"
set -s escape-time 0
set -g default-terminal "tmux-256color"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

#prefix
unbind C-b
set -g prefix C-a

set-option -g detach-on-destroy off

bind S setw synchronize-panes
bind u setw synchronize-panes off

unbind %
bind | split-window -h -c "#{pane_current_path}"

unbind '"'
bind - split-window -v -c "#{pane_current_path}"

bind-key n select-window -t +1
bind-key p select-window -t -1

unbind ]
unbind [

bind ] switch-client -n
bind [ switch-client -p

unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

unbind c
bind t new-window -c "#{pane_current_path}"

bind m resize-pane -Z

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'
bind-key -n C-f if-shell "$is_vim" 'send-keys C-f' 'send-keys "f\n"'
bind-key q if-shell "$is_vim" 'send-keys C-\\' 'kill-pane'
bind-key k if-shell "$is_vim" 'send-keys :' 'send-keys "clear\n"'


# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

 bind -n C-h if-shell "$should_forward" "send-keys C-h" "select-pane -L"
 bind -n C-j if-shell "$should_forward" "send-keys C-j" "select-pane -D"
 bind -n C-k if-shell "$should_forward" "send-keys C-k" "select-pane -U"
 bind -n C-l if-shell "$should_forward" "send-keys C-l" "select-pane -R"

#copy mode
bind c copy-mode
setw -g mode-keys vi
set -g set-clipboard on
bind v paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe "xclip -i -selection clipboard"
bind-key -T copy-mode-vi i send -X cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"

##sesh
bind-key s run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
		--layout=reverse \
		--no-sort --border-label ' sesh ' --prompt '⚡  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(⚡)+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(📁 )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(🔎 )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(⚡)+reload(sesh list)'
)\""
unbind C-s


# myoption
setw -g mouse on
set-option -g automatic-rename on
bind-key W if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                    "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                    "run-shell 'tmux kill-session -t \"#S\"'"
bind N command-prompt -p "New Session:" "new-session -A -s '%%'"

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'
############################################## Plugins ###################################################################

set -g @plugin 'omerxx/tmux-sessionx'
set -g @sessionx-bind 'o'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-tree-mode 'on'
set -g @sessionx-layout 'reverse'
set -g @sessionx-preview-location 'right'
set -g @sessionx-preview-ratio '50%'
set -g @sessionx-window-height '50%'
set -g @sessionx-window-width '75%'
set -g @sessionx-prompt ">> "

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'off'

set -g @plugin 'trevarj/tmux-open-nvim'

set -g @plugin 'thesast/tmux-keylocker'
set -g @keylocker-toggle-bind 'F3'
########################################################################################################################

#status-bar
# bind-key b set-option -g status #Ctrl+F3 Combo
set-option -g status-justify left
set-option -g status-position top
set -g status-style default

set -g window-status-current-format "#[fg=#F4EEE0,bg=default]#W#(printf '%%s\n' '#F' | tr 'Z' '󰊓' | tr '*' '')"
set -g window-status-format "#[fg=#a3a3a3,bg=default]#W#(printf '%%s\n' '#F' | tr '-' '' | tr 'Z' '󰊓')"
set-option -g status-right ''
set-option -g status-left '#[fg=#434242,bg=default]#[fg=white,bg=#434242] #S #[fg=#434242,bg=default]   '
set-option -g status-interval 5

#Auto hide
# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

run '~/.tmux/plugins/tpm/tpm'
